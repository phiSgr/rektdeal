name: Test project

on:
  push:
    branches: [ main ]
permissions:
  contents: read
jobs:
  check-hash-cache:
    runs-on: ubuntu-latest
    outputs:
      dds_hash: ${{ steps.dds_commit.outputs.hash }}
      linux_cached: ${{ steps.check_cache.outputs.linux }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - id: dds_commit
        run: cd dds && git log --pretty=format:'hash=%h' >> "$GITHUB_OUTPUT"
      - uses: actions/cache@v3
        with:
          path: linux-lib/**
          key: linux-${{ steps.dds_commit.outputs.hash }}
      - id: check_cache
        run: (echo -n 'linux=' && [ -f 'linux-lib/libdds.so' ] && echo 'True' || echo 'False') >> "$GITHUB_OUTPUT"
  build-linux:
    runs-on: ubuntu-latest
    needs: check-hash-cache
    if: ${{ needs.check-hash-cache.outputs.linux_cached == 'False' }}
    name: linux-x86_64
    steps:
      - uses: actions/cache@v3
        with:
          path: linux-lib/**
          key: linux-${{ needs.check-hash-cache.outputs.dds_hash }}
          enableCrossOsArchive: true
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build Linux lib
        run: |
          mkdir -p linux-lib && cd dds/src && git apply ../../dds.diff &&
            make -f Makefiles/Makefile_linux_shared THREAD_LINK= THREADING=-DDDS_THREADS_STL &&
            cp libdds.so ../../linux-lib/
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs:
      - check-hash-cache
      - build-linux
    if:
      always() &&
      needs.build-linux.result != 'failed'
    name: test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/cache@v3
        with:
          path: linux-lib/**
          key: linux-${{ needs.check-hash-cache.outputs.dds_hash }}
          fail-on-cache-miss: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/cache@v3
        with:
          path: jextract-21/**
          key: jextract-21
      - run: '[ -f jextract-21/bin/jextract ] || wget -c https://download.java.net/java/early_access/jextract/1/openjdk-21-jextract+1-2_linux-x64_bin.tar.gz -O - | tar -xz'
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./linux-lib ./gradlew test --no-daemon -PjextractPath=jextract-21/
